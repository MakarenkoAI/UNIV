.system_element_4200
=> nrel_inclusion: [*

	.system_element_4201
	<- .system_element_2;
	-> rrel_maximum_studied_object_class: .system_element_4202;
	-> rrel_explored_relation: 
		.system_element_4203;
		.system_element_4204;
		.system_element_4205;
		.system_element_4206;
		.system_element_4207;
		.system_element_4208;
		.system_element_4209
	;;

	.system_element_4202
	<= nrel_inclusion: .system_element_4210;
	<= .system_element_179: .system_element_4211;
	=> nrel_subdividing: {
		.system_element_4212
		(*
			=> nrel_subdividing: {
				.system_element_4213;
				.system_element_4214;
				.system_element_4215;
				.system_element_4216
			};;
		*);
		.system_element_4217
		(*
			=> nrel_subdividing: {
				.system_element_4218;
				.system_element_4219;
				.system_element_4220;
				.system_element_4221;
				.system_element_4222
			};;
		*);
		.system_element_4223
		(*
			=> nrel_subdividing: {
				.system_element_4224;
				.system_element_4225;
				.system_element_4226;
				.system_element_4227
			};;
		*);
		.system_element_4228
		(*
			=> nrel_subdividing: {
				.system_element_4229;
				.system_element_4230;
				.system_element_4231;
				.system_element_4232;
				.system_element_4233;
				.system_element_4234
			};;
		*);
		.system_element_4235
		(*
			=> nrel_subdividing: {
				.system_element_4236;
				.system_element_4237
			};;
		*);
		.system_element_4238
		(*
			=> nrel_subdividing: {
				.system_element_4236;
				.system_element_4239;
				.system_element_4240;
				.system_element_4241;
				.system_element_4242;
				.system_element_4243
			};;
		*);
		.system_element_4244
		(*
			<= nrel_subdividing: {
				.system_element_4245
			};;
		*);
		.system_element_4246
		(*
			=> nrel_subdividing: {
				.system_element_4247;
				.system_element_4248;
				.system_element_4249;
				.system_element_4250;
				.system_element_4251;
				.system_element_4252;
				.system_element_4253;
				.system_element_4254;
				.system_element_4255;
				.system_element_4256;
				.system_element_4257;
				.system_element_4258;
				.system_element_4259;
				.system_element_4260;
				.system_element_4261;
				.system_element_4262;
				.system_element_4263;
				.system_element_4263;
				.system_element_4264;
				.system_element_4265;
				.system_element_4266;
				.system_element_4267;
				.system_element_4268;
				.system_element_4269;
				.system_element_4270;
				.system_element_4271;
				.system_element_4272
			};;
		*);
		.system_element_4273
		(*
			=> nrel_subdividing: {
				.system_element_4274;
				.system_element_4275;
				.system_element_4276;
				.system_element_4277;
				.system_element_4278;
				.system_element_4279;
				.system_element_4280;
				.system_element_4281;
				.system_element_4282
			};;
		*)
	};;

	.system_element_4203
	<= nrel_inclusion: .system_element_4283;
	<- .system_element_2921;
	<- .system_element_2219;
	=> nrel_subdividing: {
		.system_element_4204;
		.system_element_4205
	};
	=> nrel_subdividing: {
		.system_element_4206;
		.system_element_4207
	};
	=> nrel_subdividing: {
		.system_element_4284;
		.system_element_4285
	};
	=> nrel_inclusion: 
		.system_element_4208
		(*
			=> nrel_subdividing: {
				.system_element_4286;
				.system_element_4287;
				.system_element_4288;
				.system_element_4289;
				.system_element_4290
			};;
		*);
		.system_element_4209;
		.system_element_4291
		(*
			=> nrel_subdividing: {
				.system_element_4292
				(*
					=> nrel_subdividing: {
						.system_element_4293;
						.system_element_4294
						(*
							=> nrel_inclusion: .system_element_4295;;
						*);
						.system_element_4296
					};;
				*);
				.system_element_4297
				(*
					=> nrel_subdividing: {
						.system_element_4298;
						.system_element_4299
						(*
							=> nrel_inclusion: .system_element_4300;;
							=> nrel_subdividing: {
								.system_element_4301;
								.system_element_4302;
								.system_element_4303
							};;
							=> nrel_subdividing: {
								.system_element_4304;
								.system_element_4305
							};;
						*)
					};;
				*);
				.system_element_4306;
				.system_element_4307
			};;
		*)
	;
	=> nrel_explanation: [<p>Ролевое отношение <i>scp-операнд'</i> является неосновным понятием и указывает на принадлежность аргументов <i>scp-оператору</i>. Помимо указания какого-либо класса <i>scp-операндов'</i> порядок аргументов <i>scp-оператора</i> дополнительно уточняется <i>ролевыми отношениями 1'</i>, <i>2'</i> и т. д.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_4204
	=> nrel_explanation: [<p>В рамках <i>scp-программы</i> <i>scp-константы'</i> явно участвуют в <i><b>scp-операторах</b></i> в качестве элементов (в теоретико-множественном смысле) и напрямую обрабатываются при интерпретации <i>scp-программы</i>. Константами в рамках <i>scp-программы</i> могут быть <i>sc-элементы</i> любого типа, как <i><b>sc-константы</b></i>, так и <i><b>sc-переменные</b></i>. Константа в рамках <i>scp-программы</i> остается неизменной в течение всего срока интерпретации. Константа <i><b>scp-программы</b></i> может быть рассмотрена как переменная, значение которой совпадает с самой переменной в каждый момент времени и изменено быть не может. Таким образом, далее будем считать, что <i>scp-константа'</i> и ее значение это одно и то же. Каждый <i>in-параметр'</i> при интерпретации каждой конкретной копии <i>scp-программы</i> становится <i>scp-константой'</i> в рамках всех ее операторов, хотя в исходном теле данной программы в каждом из этих операторов он является <i>scp-переменной'</i>.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_4205
	=> nrel_explanation: [<p>В рамках <i>scp-программы</i> <i>scp-переменные'</i> не обрабатываются явно при интерпретации, обрабатываются значения переменных. Каждая переменная <i>scp-программы</i> может иметь одно значение в каждый момент времени, т. е. представляет собой ситуативный <i>синглетон</i>, элементом которого является текущее значение <i>scp-переменной'</i>. Значение каждой <i>scp-переменной'</i> может меняться в ходе интерпретации <i>scp-программы</i>. При этом интерпретатор при обработке <i>scp-оператора</i> работает непосредственно со значениями <i><b>scp-переменных'</b></i>, а не самими <i>scp-переменными'</i> (которые также являются узлами той же семантической сети).</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_4206
	=> nrel_explanation: [<p>Значение операндов, помеченных ролевым отношением <i>scp-операнд с заданным значением'</i>, считается заданным в рамках текущего <i>scp-оператора</i>. Данное значение учитывается при выполнении <i>scp-оператора</i> и остается неизменным после окончания выполнения <i>scp-оператора</i>. Каждая <i>scp-константа'</i> по умолчанию рассматривается как <i>scp-операнд с заданным значением'</i>, в связи с чем явное использование данного ролевого отношения в таком случае является избыточным. В таком случае в качестве значения рассматривается непосредственно сам операнд. В случае, если отношением <i><b>scp-операнд</b> с заданным значением'</i> помечена <i>scp-переменная'</i>, то осуществляется попытка поиска значения для данной <i>scp-переменной'</i> (ее элемента). Если попытка оказалась безуспешной, то возникает ошибка времени выполнения, которая должна быть обработана соответствующим образом.Любой <i>scp-операнд с заданным значением'</i> независимо от конкретного типа <i>scp-оператора</i> может быть <i>scp-переменной'</i>.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;

	.system_element_4207
	=> nrel_explanation: [<p>Значение операндов, помеченных ролевым отношением <i>scp-операнд со свободным значением'</i>, считается свободным (не заданным заранее) в рамках текущего <i>scp-оператора</i>. В начале выполнения <i>scp-оператора</i> связь между <i>scp-переменной'</i>, помеченной данным ролевым отношением, и ее элементом (значением) всегда удаляется. В результате выполнения данного оператора может быть либо сгенерировано новое значение <i>scp-переменной'</i>, либо не сгенерировано, тогда <i>scp-переменная'</i> будет считаться не имеющей значения. Ни одна <i>scp-константа'</i> не может быть помечена как <i>scp-операнд со свободным значением'</i>, поскольку константа не может изменять свое значение в ходе интерпретации <i>scp-программы</i>.</p>]
	(*
		<- lang_ru;;
		=> nrel_format: format_html;;
	*);;
*];;
